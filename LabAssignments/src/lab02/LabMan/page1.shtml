


<!DOCTYPE html> 
<html lang="en"> 
  <head> 
    <meta charset="utf-8" /> 

    <title>CMSC 202 - Fall 2012 - Lab 2</title> 

    <link rel="shortcut icon" href="/courses/undergraduate/202/fall12/favicon.ico" />
    <link rel="stylesheet" href="/courses/undergraduate/202/fall12/css/style.css" />
    <link rel="stylesheet" href="/courses/undergraduate/202/fall12/css/print.css" media="print" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js"></script>
    <script src="/courses/undergraduate/202/fall12/js/jquery.cookie.js"></script>
  </head> 
  <body> 
    <div id="wrapper"> 
      <div id="header">
	<h1><a href="/courses/undergraduate/202/fall12/">CMSC 202 &mdash; Fall 2012</a></h1>
	<div id="headerimg" class="donotprint"></div>
	<div id="nav" class="donotprint">
	  <ul>
	    <li><a href="/courses/undergraduate/202/fall12/">Home</a></li>
	    <li><a href="/courses/undergraduate/202/fall12/schedule/">Schedule/Lecture Notes</a></li>
<!--	    <li><a href="/courses/undergraduate/202/fall12/lectures/">Lectures</a></li> -->
	    <li><a href="/courses/undergraduate/202/fall12/labs/">Labs</a></li>
	    <li><a href="/courses/undergraduate/202/fall12/projects/">Projects</a></li>
	    <li><a href="/courses/undergraduate/202/fall12/exams/">Exams</a></li>
	    <li><a href="/courses/undergraduate/202/fall12/resources/">Resources</a></li>
	    <li><a href="/courses/undergraduate/202/fall12/faq/">FAQ</a></li>
	    <li><a href="/courses/undergraduate/202/fall12/staff/">Staff</a></li>
	    <li><a href="/courses/undergraduate/202/fall12/syllabus/">Syllabus</a></li>
	  </ul>
	</div>
      </div>
      <div id="content">

<!-- END HEADER -->



<h1>Console Output</h1>
<div class="sidebar">
  <p><a href="./">Overview</a></p>
  <ol>
     <li><a href="page1.shtml">Console Output</a></li>
     <li><a href="page2.shtml">Console Input</a></li>
     <li><a href="page3.shtml">Create Project</a></li>
     <li><a href="page4.shtml">Compiling Java Code</a></li>
     <li><a href="page5.shtml">Using Console I/O</a></li>
     <li><a href="page6.shtml">Command Line Arguments</a></li>
<!--     <li><a href="page7.shtml">Submitting your code</a></li> -->
<!--     <li><a href="page8.shtml">Transferring work from home</a></li> -->
     <li><a href="page7.shtml">File Redirection (optional)</a></li>
  </ol>
  <p>
    <a href="http://userpages.umbc.edu/~dhood2/courses/misc/fall08/working-from-home/">Working from Home</a>
  </p>
</div>


<h2>System.out</h2>
<p>
  <code>System.out</code> is the object that controls console output in Java.
  It contains several methods that pertain to output.  We will be covering
  <code>print()</code>, <code>println()</code> and <code>printf()</code>
  today.
</p>
<p>
  <code>print()</code> &mdash; Takes one argument, which is then printed to
  the console.  This argument will usually be a string, but
  <code>print()</code> will work with almost any primitive type (i.e. int,
  double, char, etc.).
</p>
<p>
  <code>println()</code> &mdash; The same as <code>print()</code>, but
  automatically places the cursor on the next line.
</p>
<p>
  <code>printf()</code> &mdash; Uses a custom syntax to provide advanced
  formatting.
</p>


<h2>Outputting Data</h2>
<p>
  The easiest way to use <code>print()</code> is to output a simple statement to the screen.
</p>
<p>
  Example:
</p>
<pre class="brush: java">
public static void main(String[] args)
{
    System.out.print("Hello world");
}
</pre>

<p>
  <code>print()</code> can also be used to output the contents of variables.
</p>
<p>
 Example:
</p>
<pre class="brush: java">
public static void main(String[] args)
{
    String outputText = "Hello world";
    System.out.print(outputText);
}
</pre>
<p>
  Finally, <code>print()</code> can also combine any number of variables and
  constants together and print them out as one.  Note that the "\n" character
  represents a newline.
</p>
<p>
  Example:
</p>
<pre class="brush: java">
public static void main(String[] args)
{
    String myName = "Travis";
    int myAge = 22;
    double myHeight = 6.0;

    System.out.println("Name: " + myName);
    System.out.print("Age: " + myAge + "\n");
    System.out.print("Height: ");
    System.out.println(myHeight);
    System.out.println("Name: " + myName + " Age: " + myAge + " Height: " + myHeight);
}
</pre>
<p>
  Output:
</p>
<pre class="brush: plain; gutter: false">
Name: Travis
Age: 22
Height: 6.0
Name: Travis Age: 22 Height: 6.0
</pre>
<p>
  This example works because Java will automatically convert numbers and some
  other native (primitive) types to strings when you use the '+' operator to
  add them to a string.  The '+' operator in Java is the <strong>concatenation
  operator</strong> when used on strings.
</p>
<p>
  So, what happens if we say:
</p>

<pre name="code" class="brush: java">
public static void main(String[] args)
{
    int a = 4;
    int b = 3;
    System.out.println("Name: " + a + b);
}
    </pre>
<p>
  And what if we slide <code>a + b</code> to the left hand side:
</p>
<pre name="code" class="brush: java">
    System.out.println(a + b + "Name: ");
    </pre>


    <h2>print() vs println()</h2>
    <p><code>println()</code> is useful because it automatically inserts a
       line break at the end of your output, but sometimes <code>print()</code>
       is a better choice.  Times when you might want to use <code>print()
       </code> over <code>println()</code> are:
<ul>
<li>Prompting for user input</li>
<li>Combining several print statements that should all be on one line</li>
<li>Splitting large print statements up to make code more readable</li>
</ul></p>
<h2>printf()</h2>
<p>
Since version 1.5, Java includes a <code>printf()</code> function that
behaves similarly to the C equivalent.
</p>

<p>
Here's an example of formatted output using printf:
</p>

<pre class="brush: java">
public static void main(String[] args)
{
    int i = 7;
    float f = 962.5274f;
    double d = 12345.6789;

    System.out.printf("There are %d dogs. \n", i);
    System.out.printf("They can smell %2.1f times better than we can.\n", f);
    System.out.printf("Actually, %10.1f is a made-up number. So is %f\n", f, d);
    System.out.printf("Maybe in %e years, we will be able to smell as well as dogs.", d);
}
</pre>
<p>
  Which should output:
</p>
<pre class="brush: plain; gutter: false">
There are 7 dogs.
They can smell 962.5 times better than we can.
Actually,      962.5 is a made-up number. So is 12345.678900
Maybe in 1.234568e+04 years, we will be able to smell as well as dogs.
</pre>

<p>
  These are just a few of the many formatting flags that exist, but the ones
  shown here include:
</p>
<ul>
  <li><code>%d</code> for decimal (as in base 10) numbers</li>
  <li>
	<code>%f</code> for floating point numbers. You can further format a
	floating point number by specifying a minimum character length and number
	of digits after the decimal point. For example, %10.1f would print a
	number with a minimum of 10 characters and only 1 digit after the decimal
	point.
  </li>
  <li>
    <code>%e</code> for scientific notation.
  </li>
</ul>

<p>
  More information on printf and formatted printing can be found <a
  href="http://download.oracle.com/javase/6/docs/api/java/util/Formatter.html#syntax">here</a>.
</p>
<div class="labnav">
  <div>

  </div>
  <a href="./page2.shtml" class="button">Next &raquo;</a>
</div>




<!-- BEGIN FOOTER -->

      </div>
      <div id="footer" class="donotprint">
        <div>	
          <a href="/courses/undergraduate/202/fall12">CMSC 202 &mdash; Fall 2012</a>
        </div>
        <a href="/courses/undergraduate/202/fall12/../">CMSC 202</a> |
        <a href="http://www.csee.umbc.edu/">CSEE</a> |
        <a href="http://www.umbc.edu/">UMBC</a>
      </div>
    </div> 
    <link rel="stylesheet" href="/courses/undergraduate/202/fall12/js/syntaxhighlighter_3.0.83/styles/shCore.css"/>
    <link rel="stylesheet" href="/courses/undergraduate/202/fall12/js/syntaxhighlighter_3.0.83/styles/shCoreEclipseModified.css"/>
    <script src="/courses/undergraduate/202/fall12/js/syntaxhighlighter_3.0.83/scripts/shCore.js"></script>
    <script src="/courses/undergraduate/202/fall12/js/syntaxhighlighter_3.0.83/scripts/shBrushJava.js"></script>
    <script src="/courses/undergraduate/202/fall12/js/syntaxhighlighter_3.0.83/scripts/shBrushPlain.js"></script>
    <script>

      // source code highlighting
      $(function() {
        SyntaxHighlighter.defaults['toolbar'] = false;
        SyntaxHighlighter.all();
      });

      // Google Analytics
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-20998370-1']);
      _gaq.push(['_trackPageview']);
     (function() {
       var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
       ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
       var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
     })();

    </script>
  </body> 
</html> 

